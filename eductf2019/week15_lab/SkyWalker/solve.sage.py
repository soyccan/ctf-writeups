

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_91065253230025247732425967092598538509767353676436114528118074317527802215619882429161904876508240534303234953913943835146683465013713686948500338647558462630226862935445210619962973687178047110032607612332003175654090295771336341765863537626799902913495347392366714183440046838083674733655743831533477606359 = Integer(91065253230025247732425967092598538509767353676436114528118074317527802215619882429161904876508240534303234953913943835146683465013713686948500338647558462630226862935445210619962973687178047110032607612332003175654090295771336341765863537626799902913495347392366714183440046838083674733655743831533477606359); _sage_const_74574532840842689947452591462396572547197552613086169808015295349679978115041760768620042225451889845253316059415029322966743472046141305142454642724251869420985365216152662444581608186994935367247716124801197027600472746261823618646644644448403866644213153529598559256639708426453580326523109537744167818540 = Integer(74574532840842689947452591462396572547197552613086169808015295349679978115041760768620042225451889845253316059415029322966743472046141305142454642724251869420985365216152662444581608186994935367247716124801197027600472746261823618646644644448403866644213153529598559256639708426453580326523109537744167818540); _sage_const_1 = Integer(1); _sage_const_126 = Integer(126); _sage_const_128 = Integer(128); _sage_const_2 = Integer(2); _sage_const_8 = Integer(8); _sage_const_3 = Integer(3); _sage_const_0 = Integer(0)
from Crypto.Util.number import *

n = _sage_const_91065253230025247732425967092598538509767353676436114528118074317527802215619882429161904876508240534303234953913943835146683465013713686948500338647558462630226862935445210619962973687178047110032607612332003175654090295771336341765863537626799902913495347392366714183440046838083674733655743831533477606359 
c = _sage_const_74574532840842689947452591462396572547197552613086169808015295349679978115041760768620042225451889845253316059415029322966743472046141305142454642724251869420985365216152662444581608186994935367247716124801197027600472746261823618646644644448403866644213153529598559256639708426453580326523109537744167818540 

P = PolynomialRing(Zmod(n), names=('x',)); (x,) = P._first_ngens(1)

for x_len in range(_sage_const_1 ,_sage_const_126 ):
    pad = b'\x00' + b'\x87' * (_sage_const_128  - _sage_const_2  - x_len) + b'\x01'
    pad = bytes_to_long(pad) << (_sage_const_8  * l)

    f = (pad + x) ** _sage_const_3  - c

    roots = f.small_roots()
    if roots:
        root = roots[_sage_const_0 ]
        flag = long_to_bytes(root)
        if flag.startswith(b'FLAG'):
            print(flag)
            break

