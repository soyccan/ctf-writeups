# FLAG{q6B3KviyaM}
# key: 31, 79, 103, 115, 121 or 124 (by brute force)
import random

def op1(p, s):
    return sum([i * j for i, j in zip(s, p)]) % 256

def op2(m, k):
    return bytes([i ^ j for i, j in zip(m, k)])

def op3(m, p):
    return bytes([m[p[i]] for i in range(len(m))])

def op4(m, s):
    return bytes([s[x] for x in m])

def rev_op3(m, p):
    rp = [0] * len(p)
    for i in range(len(p)):
        rp[p[i]] = i
    return bytes([m[rp[i]] for i in range(len(m))])

def rev_op4(m, s):
    return bytes([s.index(x) for x in m])

'''
Linear Feedback Shift Register
'''
def stage0(m):
    random.seed('oalieno')
    p = [int(random.random() * 256) for i in range(16)]
    s = [int(random.random() * 256) for i in range(16)]
    c = b''
    for x in m:
        k = op1(p, s) # p dot s
#          print(f'p:{p} s:{s} c:{c} k:{k}')
        c += bytes([x ^ k])
        s = s[1:] + [k]
    return c

'''
Substitution Permutation Network
'''
def stage1(m):
    random.seed('oalieno')
    k = [int(random.random() * 256) for i in range(16)]
    p = [i for i in range(16)]
    random.shuffle(p)
    s = [i for i in range(256)]
    random.shuffle(s)

    c = m
    for i in range(16):
        c = op2(c, k) # xor
        c = op3(c, p) # permutation
        c = op4(c, s) # substitute
    return c

def encrypt(m, key):
    stage = [stage0, stage1]
    for i in map(int, f'{key:08b}'):
        m = stage[i](m)
    return m

'''
Linear Feedback Shift Register
'''
def destage0(c):
    random.seed('oalieno')
    p = [int(random.random() * 256) for i in range(16)]
    s = [int(random.random() * 256) for i in range(16)]
    m = b''
    for x in c:
        k = op1(p, s) # p dot s
#          print(f'p:{p} s:{s} c:{c} k:{k}')
        m += bytes([x ^ k])
        s = s[1:] + [k]
    return m

'''
Substitution Permutation Network
'''
def destage1(c):
    random.seed('oalieno')
    k = [int(random.random() * 256) for i in range(16)]
    p = [i for i in range(16)]
    random.shuffle(p)
    s = [i for i in range(256)]
    random.shuffle(s)

    m = c
    for i in range(16):
        m = rev_op4(m, s) # substitute
        m = rev_op3(m, p) # permutation
        m = op2(m, k) # xor
    return m

def decrypt(m, key):
    k = list(map(int, f'{key:08b}'))
    k.reverse()
    destage = [destage0, destage1]
    for i in k:
        m = destage[i](m)
    return m

## encryption code:
# flag = open('flag', 'rb').read()
# assert(len(flag) == 16)
# key = open('key', 'rb').read()
# assert(E ** ( I * pi ) + len(key) == 0)
# open('cipher', 'wb').write(encrypt(flag, int.from_bytes(key, 'little')))

## decrypt
cipher = open('cipher', 'rb').read()
for key in range(128):
    flag = decrypt(cipher, key)
    print(key, flag)


## output:
# 0 b'\x97\x971\x9b\x8b\x80\xb2\xfa\xe7\xacgw\xb2\x16\xbc`'
# 1 b',\xd6\x12\xf0\xb4g9\x861\xd7\xe76?\x03\x86\x85'
# 2 b'@$\xa7woH|r4\xfbN\xe3\x9e|a\xc5'
# 3 b"JU\xb3\x93\xd2U\x98\x85y\xdc\xeb\x86\xa2\x8f\x80'"
# 4 b',\xd6\x12\xf0\xb4g9\x861\xd7\xe76?\x03\x86\x85'
# 5 b"4\xcd\xda\xff _'\xe9O\xac\x14\x91\xcc\x1b\xac\xff"
# 6 b'~_\xaeW\xc5\xe4\xf3k,\x1aR\xee\xc2\x1c.\xbc'
# 7 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 8 b'@$\xa7woH|r4\xfbN\xe3\x9e|a\xc5'
# 9 b"JU\xb3\x93\xd2U\x98\x85y\xdc\xeb\x86\xa2\x8f\x80'"
# 10 b'.\x18P\xbb8\xa1\x19\xd1\xea\xd6\x91\xffG\x84\xc2\xb1'
# 11 b'K\x7f\x90)p\xe4\xfdijo\xd6\xc7f\xa9\x8cw'
# 12 b"JU\xb3\x93\xd2U\x98\x85y\xdc\xeb\x86\xa2\x8f\x80'"
# 13 b'\tp\x86#J\xd3\xb8\xe0v\xfb{\xd4d\xed$\xa5'
# 14 b"\x85\xdb\x8a\xc4\xe9\x0b\xa4Dk\xb3\xf5\xc4\n'`U"
# 15 b'\xc6=M\xfc0\xc7\xa5+\x85\x88\xc3"z\xfbZ\xec'
# 16 b',\xd6\x12\xf0\xb4g9\x861\xd7\xe76?\x03\x86\x85'
# 17 b"4\xcd\xda\xff _'\xe9O\xac\x14\x91\xcc\x1b\xac\xff"
# 18 b'~_\xaeW\xc5\xe4\xf3k,\x1aR\xee\xc2\x1c.\xbc'
# 19 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 20 b"4\xcd\xda\xff _'\xe9O\xac\x14\x91\xcc\x1b\xac\xff"
# 21 b'\xdf\xb8\xaa\x9fk\x9c\xe6DP\xd7\xd0 +\x94HH'
# 22 b'\x1d\xc0\xd7.Q\x07M\xa6\x99\xb8`|\x05\xa9\xe0I'
# 23 b'\xbf\x064z#\x1b\xd6\x9a\xba\x9e#\x8d_\x02\x0e\x87'
# 24 b'~_\xaeW\xc5\xe4\xf3k,\x1aR\xee\xc2\x1c.\xbc'
# 25 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 26 b'6\x88\x81\xb6\xc4\x02\x9c\xf6y\x04\xa3\x14\xcf#\xf5\xc5'
# 27 b'z\xc0\xf3\x06\xa7\x9f\\\x13\x14\xa5e1\x84%\x12\xf4'
# 28 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 29 b'\xfb\x97\xe1\r[\xdf\xec\xe4\xe1\x1a[\xc1\xf4=a\x9b'
# 30 b'1\x93}\x05/\xe1\x12\x81\xc9\x87\xb1\xc6&\xec\xfcl'

# 31 b'FLAG{q6B3KviyaM}'     <-----------

# 32 b'@$\xa7woH|r4\xfbN\xe3\x9e|a\xc5'
# 33 b"JU\xb3\x93\xd2U\x98\x85y\xdc\xeb\x86\xa2\x8f\x80'"
# 34 b'.\x18P\xbb8\xa1\x19\xd1\xea\xd6\x91\xffG\x84\xc2\xb1'
# 35 b'K\x7f\x90)p\xe4\xfdijo\xd6\xc7f\xa9\x8cw'
# 36 b"JU\xb3\x93\xd2U\x98\x85y\xdc\xeb\x86\xa2\x8f\x80'"
# 37 b'\tp\x86#J\xd3\xb8\xe0v\xfb{\xd4d\xed$\xa5'
# 38 b"\x85\xdb\x8a\xc4\xe9\x0b\xa4Dk\xb3\xf5\xc4\n'`U"
# 39 b'\xc6=M\xfc0\xc7\xa5+\x85\x88\xc3"z\xfbZ\xec'
# 40 b'.\x18P\xbb8\xa1\x19\xd1\xea\xd6\x91\xffG\x84\xc2\xb1'
# 41 b'K\x7f\x90)p\xe4\xfdijo\xd6\xc7f\xa9\x8cw'
# 42 b'c\xc0\xf8y\xc0@\x87\x98\x03\xd9\xcc?\xf0\x81\xff\x92'
# 43 b'\xd7\xdbq\x04XB\x88W\x10\x072\r=\n\xb4z'
# 44 b'K\x7f\x90)p\xe4\xfdijo\xd6\xc7f\xa9\x8cw'
# 45 b'pe\xa6\x84\x00\x02\x0f\xa1\xc4\xd6\xc9\x91\x83L\xbb\xf8'
# 46 b'\x87O\x83B\xdc\x08\x0b\xb9\xd3\xf18\xba\xda>\xc7\xb4'
# 47 b'\x97lx\nMP7J\xe4TR\x17e\xafK\xf0'
# 48 b"JU\xb3\x93\xd2U\x98\x85y\xdc\xeb\x86\xa2\x8f\x80'"
# 49 b'\tp\x86#J\xd3\xb8\xe0v\xfb{\xd4d\xed$\xa5'
# 50 b"\x85\xdb\x8a\xc4\xe9\x0b\xa4Dk\xb3\xf5\xc4\n'`U"
# 51 b'\xc6=M\xfc0\xc7\xa5+\x85\x88\xc3"z\xfbZ\xec'
# 52 b'\tp\x86#J\xd3\xb8\xe0v\xfb{\xd4d\xed$\xa5'
# 53 b'w\xc7\x9b\xa5\xaa\x084\xd5\xf9\xdc\xea\xe4R/Ax'
# 54 b'$\x8d:\xc3Y\xdd\x81n\x80\x1f\xff0=\xfe\x9d\x12'
# 55 b'\xa7\xa5\x01/\x88\xa3\xaag\xdaJ\x8e\xee\xcdk=\xdd'
# 56 b"\x85\xdb\x8a\xc4\xe9\x0b\xa4Dk\xb3\xf5\xc4\n'`U"
# 57 b'\xc6=M\xfc0\xc7\xa5+\x85\x88\xc3"z\xfbZ\xec'
# 58 b'Sb,P?\xe5Z\x93j\xdb\x91S\x04[O}'
# 59 b'\x9f\xef\x94\xeb\x10\xc3\xd7V\x00g\x1a\xaf\x93E\x1a\x12'
# 60 b'\xc6=M\xfc0\xc7\xa5+\x85\x88\xc3"z\xfbZ\xec'
# 61 b'0W\xc0\x9c\xc7\xdb\x91\xe7[\xb3\xf2b\x81\xc6\xc2\xc5'
# 62 b'5\xd0\xach\xe2\x1d\x9566\xd3\xd3\x00\xf3 W\xef'
# 63 b'\xcc\x17\x06\xd2\x1d\x99\xec%\xce\\\xd0\xec~D\x02B'
# 64 b',\xd6\x12\xf0\xb4g9\x861\xd7\xe76?\x03\x86\x85'
# 65 b"4\xcd\xda\xff _'\xe9O\xac\x14\x91\xcc\x1b\xac\xff"
# 66 b'~_\xaeW\xc5\xe4\xf3k,\x1aR\xee\xc2\x1c.\xbc'
# 67 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 68 b"4\xcd\xda\xff _'\xe9O\xac\x14\x91\xcc\x1b\xac\xff"
# 69 b'\xdf\xb8\xaa\x9fk\x9c\xe6DP\xd7\xd0 +\x94HH'
# 70 b'\x1d\xc0\xd7.Q\x07M\xa6\x99\xb8`|\x05\xa9\xe0I'
# 71 b'\xbf\x064z#\x1b\xd6\x9a\xba\x9e#\x8d_\x02\x0e\x87'
# 72 b'~_\xaeW\xc5\xe4\xf3k,\x1aR\xee\xc2\x1c.\xbc'
# 73 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 74 b'6\x88\x81\xb6\xc4\x02\x9c\xf6y\x04\xa3\x14\xcf#\xf5\xc5'
# 75 b'z\xc0\xf3\x06\xa7\x9f\\\x13\x14\xa5e1\x84%\x12\xf4'
# 76 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 77 b'\xfb\x97\xe1\r[\xdf\xec\xe4\xe1\x1a[\xc1\xf4=a\x9b'
# 78 b'1\x93}\x05/\xe1\x12\x81\xc9\x87\xb1\xc6&\xec\xfcl'
# 79 b'FLAG{q6B3KviyaM}'
# 80 b"4\xcd\xda\xff _'\xe9O\xac\x14\x91\xcc\x1b\xac\xff"
# 81 b'\xdf\xb8\xaa\x9fk\x9c\xe6DP\xd7\xd0 +\x94HH'
# 82 b'\x1d\xc0\xd7.Q\x07M\xa6\x99\xb8`|\x05\xa9\xe0I'
# 83 b'\xbf\x064z#\x1b\xd6\x9a\xba\x9e#\x8d_\x02\x0e\x87'
# 84 b'\xdf\xb8\xaa\x9fk\x9c\xe6DP\xd7\xd0 +\x94HH'
# 85 b'&\x0f\x89\x87\xad\xe1\xea2\x88\xac\xfc}\x82C\xa6^'
# 86 b'`U\xa5\x9c\xf7\x85W\xc9{*\x06\xe6\x84\xfc\xeb.'
# 87 b'\xbb\x84\n\x96D^]\x05\xed\xfe\xdbT*D\xba\xf2'
# 88 b'\x1d\xc0\xd7.Q\x07M\xa6\x99\xb8`|\x05\xa9\xe0I'
# 89 b'\xbf\x064z#\x1b\xd6\x9a\xba\x9e#\x8d_\x02\x0e\x87'
# 90 b'\xb1\x8e$<P\xb0\xb3\xa4w\xc2R\x88\x13t\x03\x8a'
# 91 b'\xae\x03\x1e\x02\xf6>\x92w\x94p\x8b[\xd9\xf5^.'
# 92 b'\xbf\x064z#\x1b\xd6\x9a\xba\x9e#\x8d_\x02\x0e\x87'
# 93 b'SA\xadK\x98\x98m\x83z\xb8Y\xf1\x1b\xd4.\x85'
# 94 b')\xc3\xd5,!:\xeb\xa8\xfe\x13\x13\xf4\xd26\x19\xda'
# 95 b'\x13\xdeLdj\xeb\xddj\xe2\xed=x\xc5\xef\xb2\x7f'
# 96 b'~_\xaeW\xc5\xe4\xf3k,\x1aR\xee\xc2\x1c.\xbc'
# 97 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 98 b'6\x88\x81\xb6\xc4\x02\x9c\xf6y\x04\xa3\x14\xcf#\xf5\xc5'
# 99 b'z\xc0\xf3\x06\xa7\x9f\\\x13\x14\xa5e1\x84%\x12\xf4'
# 100 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 101 b'\xfb\x97\xe1\r[\xdf\xec\xe4\xe1\x1a[\xc1\xf4=a\x9b'
# 102 b'1\x93}\x05/\xe1\x12\x81\xc9\x87\xb1\xc6&\xec\xfcl'
# 103 b'FLAG{q6B3KviyaM}'
# 104 b'6\x88\x81\xb6\xc4\x02\x9c\xf6y\x04\xa3\x14\xcf#\xf5\xc5'
# 105 b'z\xc0\xf3\x06\xa7\x9f\\\x13\x14\xa5e1\x84%\x12\xf4'
# 106 b'\xdb\x9c!\x0c\x17\xb2xHd\x07j=Y\xd1_.'
# 107 b'x6\xdbR\x05\x0c\xb8V0\x0cuZ\x01\xc3\x8cl'
# 108 b'z\xc0\xf3\x06\xa7\x9f\\\x13\x14\xa5e1\x84%\x12\xf4'
# 109 b'G\x8e\xee\xabk6t\xe0\xc6\x04\xb7\xf9\xcd\x92\x80x'
# 110 b'\xfel\xa7\xc2\xee\xbe\x8f\xf2\xbbk_\xea\xf2\x0f\x82\xc0'
# 111 b',)\xf1\x1b\x96\x88\xbb\xa6\xce\x98\xdc\x1f\xc0\x89\x89\x0c'
# 112 b'!\x0eN6c=\xe2\x0ew\x1f\xe6\x16V0\x9c0'
# 113 b'\xfb\x97\xe1\r[\xdf\xec\xe4\xe1\x1a[\xc1\xf4=a\x9b'
# 114 b'1\x93}\x05/\xe1\x12\x81\xc9\x87\xb1\xc6&\xec\xfcl'
# 115 b'FLAG{q6B3KviyaM}'
# 116 b'\xfb\x97\xe1\r[\xdf\xec\xe4\xe1\x1a[\xc1\xf4=a\x9b'
# 117 b"'lY\xe1\nJ\xc4K\x92\x1f\xf3\xdf\xa4\xdb\x0cr"
# 118 b'\x07\x00\xcd\xa8\x9br\xf2<\xd2\x9e\xb9Z$\x9fx\xd6'
# 119 b'#a\xfbcQ\xf9\xe0sl\x7f\x1e\x85\xf7\xffG-'
# 120 b'1\x93}\x05/\xe1\x12\x81\xc9\x87\xb1\xc6&\xec\xfcl'
# 121 b'FLAG{q6B3KviyaM}'
# 122 b'n\xb9\xfci\xec.Q\xf6\x14\xcb=\xfd\xa0B\xe5\x9d'
# 123 b'\xe4\xf8\x03\xb4\xda\xdbv\xaa\xcc\xb0\xb98Ce\x8a\xa2'
# 124 b'FLAG{q6B3KviyaM}'
# 125 b'\x12nf0Mn\xab\\\x8e\x87RC\xf9\xaa\xf5\x18'
# 126 b'\xcaE\x01\xc1L\x1d\x81\xd7\x9c\xd9\x8eb.[\xc9V'
# 127 b'\xe3\xc1\t\xd5N\x00m2\x00<\x1c\x84\x0e\xb2\xc4#'